version: '3.8'

services:
  db-psql:
    image: daigaku-prod-psql-img
    container_name: daigaku-prod-psql-container
    build:
      context: ./database/psql
      dockerfile: Dockerfile.prod
    ports:
      - 5432:5432
    networks:
      - daigaku
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: unless-stopped

  db-redis:
    image: daigaku-prod-redis-img
    container_name: daigaku-prod-redis-container
    build:
      context: ./database/redis-cache
      dockerfile: Dockerfile.prod
    ports:
      - 6379:6379
    networks:
      - daigaku
    restart: unless-stopped

  backend:
    image: daigaku-prod-backend-img
    container_name: daigaku-prod-backend-container
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    expose:
      - 8080
    ports:
      - 8080:8080
    networks:
      - daigaku
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db-psql/${POSTGRES_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATA_REDIS_HOST: daigaku-prod-redis-container
    depends_on:
      - db-psql
      - db-redis

  frontend:
    image: daigaku-prod-frontend-img
    container_name: daigaku-prod-frontend-container
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - 80:80
    networks:
      - daigaku
    depends_on:
      - backend

volumes:
  db-psql:
    driver: local
  db-redis:
    driver: local

networks:
  daigaku:
    driver: bridge