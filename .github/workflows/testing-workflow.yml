name: unit-and-e2e-testing-workflow

on:
  push:
    branches:
      - "*"

jobs:
  backend-unit-tests:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    services:
      db-psql:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
      db-redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: set up jdk 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven

      - name: install parent pom.xml
        run: |
          mvn install -N

      - name: build and test RabbitMQModuleApplication
        run: |
          cd common-libs/rabbitmq
          mvn clean install

      - name: configure DaigakuCoreApplication application.properties variables
        run: |
          cd core
          cat > src/main/resources/application.properties <<EOF
          spring.config.import=optional:file:.env[.properties]
          spring.datasource.url=jdbc:postgresql://localhost:5432/${{ secrets.POSTGRES_DB }}
          spring.datasource.username=${{ secrets.POSTGRES_USER }}
          spring.datasource.password=${{ secrets.POSTGRES_PASSWORD }}
          spring.cache.type=redis
          spring.data.redis.host=localhost
          spring.data.redis.port=6379
          spring.datasource.driver-class-name=org.postgresql.Driver
          tamasnovak.app.jwtSecret=fakeSecret
          tamasnovak.app.jwtExpirationMs=10000000
          EOF

      - name: build and test DaigakuCoreApplication
        run: |
          cd core
          mvn clean install

  e2e-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: install:node-lts
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install:frontend-dependencies
        working-directory: ./frontend
        run: |
          npm run dev:install:clean

      - name: install:playwright-dependencies-browsers
        working-directory: ./frontend
        run: |
          npm run test:install

      - name: configure:playwright-environment
        run: |
          echo "PLAYWRIGHT_STUDENT_EMAIL=${{ secrets.PLAYWRIGHT_STUDENT_EMAIL }}" >> $GITHUB_ENV
          echo "PLAYWRIGHT_STUDENT_PASSWORD=${{ secrets.PLAYWRIGHT_STUDENT_PASSWORD }}" >> $GITHUB_ENV
          echo "PLAYWRIGHT_STUDENT_AUTH_STATE_PATH=${{ secrets.PLAYWRIGHT_STUDENT_AUTH_STATE_PATH }}" >> $GITHUB_ENV

      - name: run:playwright-tests
        working-directory: ./frontend
        run: |
          npm run test:start

      - name: run:test-report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: ./frontend/playwright-report/index.html
          retention-days: 1
          overwrite: true
