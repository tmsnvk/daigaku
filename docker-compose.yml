name: daigaku

services:
  db-psql:
    image: postgres:17.2-alpine
    container_name: db-psql-container
    hostname: ${POSTGRES_DOCKER_HOST}
    env_file:
      - .env
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - db-psql:/var/lib/postgresql/data
      - ./database/psql/schema.sql:/docker-entrypoint-initdb.d/01_schema.sql
      - ./database/psql/data.sql:/docker-entrypoint-initdb.d/02_data.sql
    ports:
      - 5432:5432
    expose:
      - 5432
    restart: always
    networks:
      - daigaku

  db-redis:
    image: redis:7.4.2-alpine
    container_name: db-redis-container
    hostname: ${REDIS_DOCKER_HOST}
    volumes:
      - db-redis:/data
    command: ["redis-server", "--protected-mode", "no"]
    ports:
      - 6379:6379
    expose:
      - 6379
    restart: always
    networks:
      - daigaku

  backend-rabbitmq-mgmt:
    image: rabbitmq:4.0.5-management-alpine
    container_name: backend-rabbitmq-mgmt-container
    hostname: ${RABBITMQ_DOCKER_HOST}
    volumes:
      - ./backend/rabbitmq-mgmt/definitions.json:/etc/rabbitmq/definitions.json
      - ./backend/rabbitmq-mgmt/rabbitmq.config:/etc/rabbitmq/rabbitmq.config
    ports:
      - 5672:5672
      - 15672:15672
    expose:
      - 5672
      - 15672
    restart: always
    networks:
      - daigaku

  backend-s3:
    image: daigaku-s3-image
    container_name: backend-s3-container
    build:
      context: ./backend/s3
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - 8081:8081
    expose:
      - 8081
    networks:
      - daigaku
    depends_on:
      - backend-rabbitmq-mgmt

  backend-email:
    image: daigaku-email-image
    container_name: backend-email-container
    build:
      context: ./backend/email
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - 8082:8082
    expose:
      - 8082
    networks:
      - daigaku
    depends_on:
      - backend-rabbitmq-mgmt

  backend-core:
    image: daigaku-core-image
    container_name: backend-core-container
    build:
      context: ./backend/core
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - 8080:8080
    expose:
      - 8080
    networks:
      - daigaku
    depends_on:
      - db-psql
      - db-redis
      - backend-rabbitmq-mgmt
      - backend-s3
      - backend-email

  frontend:
    image: daigaku-frontend-image
    container_name: daigaku-frontend-container
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - 80:80
    expose:
      - 80
    networks:
      - daigaku
    depends_on:
      - backend-core

volumes:
  db-psql:
    driver: local
  db-redis:
    driver: local

networks:
  daigaku:
    driver: bridge
